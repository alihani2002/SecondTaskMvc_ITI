// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecondTaskMvc_ITI.ContextData;

#nullable disable

namespace SecondTaskMvc_ITI.Migrations
{
    [DbContext(typeof(ContextITI))]
    [Migration("20230924132442_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Emp_Project", b =>
                {
                    b.Property<int?>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Project_Id")
                        .HasColumnType("int");

                    b.Property<int?>("WorkHours")
                        .HasColumnType("int");

                    b.HasKey("Emp_Id", "Project_Id");

                    b.HasIndex("Project_Id");

                    b.ToTable("EmpolyeeProject");
                });

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Empolyee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Office_Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Office_Id");

                    b.ToTable("Empolyee");
                });

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Office");
                });

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("project");
                });

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Emp_Project", b =>
                {
                    b.HasOne("SecondTaskMvc_ITI.Models.Empolyee", "empolyee")
                        .WithMany("EmpolyeeProject")
                        .HasForeignKey("Emp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecondTaskMvc_ITI.Models.Project", "project")
                        .WithMany("empProject")
                        .HasForeignKey("Project_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empolyee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Empolyee", b =>
                {
                    b.HasOne("SecondTaskMvc_ITI.Models.Office", "Office")
                        .WithMany("listOfEmpolyee")
                        .HasForeignKey("Office_Id");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Empolyee", b =>
                {
                    b.Navigation("EmpolyeeProject");
                });

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Office", b =>
                {
                    b.Navigation("listOfEmpolyee");
                });

            modelBuilder.Entity("SecondTaskMvc_ITI.Models.Project", b =>
                {
                    b.Navigation("empProject");
                });
#pragma warning restore 612, 618
        }
    }
}
